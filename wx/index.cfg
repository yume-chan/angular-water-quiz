var ghost = require(process.argv[2]+'/webwine/cfg/ghost.js'); 
var gapi = require(process.argv[2]+'/webwine/cmn/gapi.js');

exports.itfconf = function() {
	return new CurrentAPI().conf();
}

exports.itfleft = function(req,res,fld,fle) {
	return new CurrentAPI().output(req,res,fld,fle);
}

var CurrentAPI = gapi.BaseAPI.extend({
    conf: function() { return { auth: false,
        	type: "json",
        	itfs: [
	            {
	                host: ghost.dscm.winecenter.addr,
	                port: ghost.dscm.winecenter.port,
	                iurl: "/wechatCoreApp?actn=processRequest",	
	                uuid: "wechatCoreApp",   
	                meth: "post",
	                type: "sdcm",
	                next: [],
	                func: function(req,res,fld,fle){
	                	return new CurrentAPI("wechatCoreApp").
	                		callFunc(req,res,fld,fle);
	                }
	            }   		
        	]
    	};
    },
	
	doCallFunc: function(uuid, req, res, fld, fle) {
		var reqString="";
		var method = req.method;
		var ip = gapi.getIPv4(req.user.addr);
		if(method=="GET"){
			var obj={};
			obj.echostr = gapi.getParameter(req, "echostr"),
			obj.nonce = gapi.getParameter(req, "nonce"),
			obj.signature = gapi.getParameter(req, "signature"),
			obj.timestamp = gapi.getParameter(req, "timestamp");
			for(key in obj){
				if(!obj[key]){
					res.status(500).end("param error");
					ghost.getLogger().info("[doCallFunc]IP：%s, service: wx.index, dc: wechatCoreApp.processRequest, message: 'param', param: %s=%s", ip, key,obj[key]);
					return null;
				}
			}
			reqString = JSON.stringify(obj); 
		} else if(method=="POST") {
			reqString = req.body.toString();
		} else {
			res.status(500).end("param error");
			ghost.getLogger().info("[doCallFunc]IP：%s, service: wx.index, dc: wechatCoreApp.processRequest, message: 'param', param: method=%s", ip, method);
			return null;
		}

		ghost.getLogger().info("[doCallFunc]IP：%s, service: wx.index, dc: wechatCoreApp.processRequest, message: 'param', param: method=%s,reqString=%s", ip, method,reqString);
	    return {
	       "claz" : "['java.lang.String','java.lang.String']",
	       "json" : [method, reqString]
	    };
	},
		    
	doOutput: function(req, res, fld, fle) {
		var ip = gapi.getIPv4(req.user.addr);
		if(!req.rslt['wechatCoreApp']){
			res.status(500).end("error");
			ghost.getLogger().error("[doOutput]IP：%s, service: wx.index, dc: wechatCoreApp.processRequest, message: 'rslt is null', rslt: %s", ip, JSON.stringify(req.rslt['wechatCoreApp']));
			return null;
		}
		if(req.rslt['wechatCoreApp'].code!=0){
			res.status(500).end("error");
			ghost.getLogger().error("[doOutput]IP：%s, service: wx.index, dc: wechatCoreApp.processRequest, message: 'rslt error', rslt: %s", ip, JSON.stringify(req.rslt['wechatCoreApp']));
			return null;
		}

		ghost.getLogger().info("[doOutput]IP：%s, service: wx.index, dc: wechatCoreApp.processRequest, message: 'success', rslt: %s", ip, JSON.stringify(req.rslt['wechatCoreApp']));
		res.writeHead(200, {'Content-type' : 'text/xml'});
		res.end(req.rslt['wechatCoreApp'].result);
		return null;
	}
});

